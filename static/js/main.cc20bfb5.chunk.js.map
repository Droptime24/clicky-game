{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["Card","props","className","onClick","setClicked","id","alt","name","src","image","Wrapper","children","Title","correctGuesses","topScore","clickAlert","App","state","matches","clickedMatch","filter","match","clicked","i","length","setState","sort","a","b","Math","random","this","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"q+DAceA,MAVf,SAAcC,GACV,OACI,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,WAAWH,EAAMI,MACxD,yBAAKH,UAAU,iBACX,yBAAKA,UAAU,YAAYI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,WCAxDC,MANf,SAAiBT,GACb,OACI,yBAAKC,UAAU,aAAf,IAA6BD,EAAMU,SAAnC,M,MCIOC,MALf,SAAeX,GACX,OACI,wBAAIC,UAAU,SAAd,IAAwBD,EAAMU,SAA9B,M,OCGJE,G,MAAiB,GACjBC,EAAW,EACXC,EACF,0FAwGaC,E,2MApGbC,MAAQ,CACNC,UACAL,iBACAC,WACAC,c,EAGFX,WAAa,SAAAC,GACX,IAAMa,EAAU,EAAKD,MAAMC,QACrBC,EAAeD,EAAQE,QAAO,SAAAC,GAAK,OAAIA,EAAMhB,KAAOA,KAE1D,GAAIc,EAAa,GAAGG,QAAS,CAC3BT,EAAiB,EACjBE,EAAa,yCAEb,IAAK,IAAIQ,EAAI,EAAGA,EAAIL,EAAQM,OAAQD,IAClCL,EAAQK,GAAGD,SAAU,EAGvB,EAAKG,SAAS,CAAEV,eAChB,EAAKU,SAAS,CAAEZ,mBAChB,EAAKY,SAAS,CAAEP,iBAEX,GAAIL,EAAiB,EAE1BM,EAAa,GAAGG,SAAU,EAG1BP,EAAa,gCADbF,EAIqBC,IACnBA,EAAWD,EACX,EAAKY,SAAS,CAAEX,cAGlBI,EAAQQ,MAAK,SAAUC,EAAGC,GACxB,MAAO,GAAMC,KAAKC,YAIpB,EAAKL,SAAS,CAAEP,YAChB,EAAKO,SAAS,CAAEZ,mBAChB,EAAKY,SAAS,CAAEV,mBAEX,CACLI,EAAa,GAAGG,SAAU,EAE1BT,EAAiB,EACjBE,EAAa,gBACbD,EAAW,GAEX,EAAKW,SAAS,CAAEX,aAEhB,IAAK,IAAIS,EAAI,EAAGA,EAAIL,EAAQM,OAAQD,IAClCL,EAAQK,GAAGD,SAAU,EAGvBJ,EAAQQ,MAAK,SAAUC,EAAGC,GACxB,MAAO,GAAMC,KAAKC,YAIpB,EAAKL,SAAS,CAAEP,YAChB,EAAKO,SAAS,CAAEZ,mBAChB,EAAKY,SAAS,CAAEV,iB,wEAIV,IAAD,OACP,OACE,kBAAC,EAAD,KACE,yBAAKb,UAAU,aACb,kBAAC,EAAD,mBACA,6BACA,wBAAIA,UAAU,gBAAgB6B,KAAKd,MAAMF,YACzC,wBAAIb,UAAU,gBAAd,UACU6B,KAAKd,MAAMJ,eADrB,2BACiEkB,KAAKd,MAAMH,WAG9E,yBAAKZ,UAAU,aACb,yBAAKA,UAAU,8BACZ6B,KAAKd,MAAMC,QAAQc,KAAI,SAAAX,GAAK,OAE3B,kBAAC,EAAD,CACEjB,WAAY,EAAKA,WACjBC,GAAIgB,EAAMhB,GACV4B,IAAKZ,EAAMhB,GACXI,MAAOY,EAAMZ,kB,GA1FXyB,aCRlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cc20bfb5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n\nfunction Card(props) {\n    return (\n        <div className=\"card\" onClick={() => props.setClicked(props.id)}>\n            <div className=\"img-container\">\n                <img className=\"img-fluid\" alt={props.name} src={props.image} />\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from \"react\";\n\nfunction Wrapper(props) {\n    return (\n        <div className=\"container\"> {props.children} </div>\n    )\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./Title.css\";\n\nfunction Title(props) {\n    return (\n        <h1 className=\"title\"> {props.children} </h1>\n    );\n}\nexport default Title;","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport matches from \"./cards.json\";\nimport \"./App.css\";\n\n// Global variables set for the state\nlet correctGuesses = 0;\nlet topScore = 0;\nlet clickAlert =\n  \"Click the images to earn defense points, click the same image twiceand the zombies win.\";\n\nclass App extends Component {\n// Setting the state by using the global variables\n  state = {\n    matches,\n    correctGuesses,\n    topScore,\n    clickAlert\n  };\n\n  setClicked = id => {\n    const matches = this.state.matches;\n    const clickedMatch = matches.filter(match => match.id === id);\n\n    if (clickedMatch[0].clicked) {\n      correctGuesses = 0;\n      clickAlert = \"Game Over! The zombies ate your brains\";\n    \n      for (let i = 0; i < matches.length; i++) {\n        matches[i].clicked = false;\n      }\n// Reset the state to whatever is true from the above click function\n      this.setState({ clickAlert });\n      this.setState({ correctGuesses });\n      this.setState({ matches });\n\n    } else if (correctGuesses < 9) {\n// Finding out if the clicked image does not match the previously clicked image\n      clickedMatch[0].clicked = true;\n// If it doesn't match previous image add 1 to the Current Score\n      correctGuesses++;\n      clickAlert = \"You're winning! Keep going!\";\n\n// When an image gets clicked twice in a row, set topScore state to the number of correct guesses\n      if (correctGuesses > topScore) {\n        topScore = correctGuesses;\n        this.setState({ topScore });\n      }\n\n      matches.sort(function (a, b) {\n        return 0.5 - Math.random();\n      });\n\n// Reset the state to whatever is true from the above click function\n      this.setState({ matches });\n      this.setState({ correctGuesses });\n      this.setState({ clickAlert });\n\n    } else {\n      clickedMatch[0].clicked = true;\n// If correct guesses equals the amount of images in the array, reset score to 0 and set state of score to 10 (top score acheivable)\n      correctGuesses = 0;\n      clickAlert = \"SPACE TACOS!!\";\n      topScore = 10;\n\n      this.setState({ topScore });\n\n      for (let i = 0; i < matches.length; i++) {\n        matches[i].clicked = false;\n      }\n\n      matches.sort(function (a, b) {\n        return 0.5 - Math.random();\n      });\n\n// Reset the state to whatever is true from the above click function\n      this.setState({ matches });\n      this.setState({ correctGuesses });\n      this.setState({ clickAlert });\n    }\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <div className=\"container\">\n          <Title>Clicky PVZ</Title>\n          <br />\n          <h3 className=\"scoreSummary\">{this.state.clickAlert}</h3>\n          <h3 className=\"scoreSummary\">\n            Score: {this.state.correctGuesses} &nbsp; | &nbsp; Top Score: {this.state.topScore}\n          </h3>\n        </div>\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            {this.state.matches.map(match => (\n             \n              <Card\n                setClicked={this.setClicked}\n                id={match.id}\n                key={match.id}\n                image={match.image}\n              />\n\n            ))}\n          </div>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}